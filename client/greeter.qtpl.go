// Code generated by qtc from "greeter.qtpl". DO NOT EDIT.
// See https://github.com/valyala/quicktemplate for details.

//line greeter.qtpl:1
package main

// type greeterOptions struct{ username, password, contestId, background, apiUrl, chainString string }
//

//line greeter.qtpl:4
import (
	qtio422016 "io"

	qt422016 "github.com/valyala/quicktemplate"
)

//line greeter.qtpl:4
var (
	_ = qtio422016.Copy
	_ = qt422016.AcquireByteBuffer
)

//line greeter.qtpl:4
func (g greeterOptions) StreamGenerate(qw422016 *qt422016.Writer) {
//line greeter.qtpl:4
	qw422016.N().S(`
[General]
`)
//line greeter.qtpl:6
	if g.background != "" {
//line greeter.qtpl:6
		qw422016.N().S(`
greeter-background-image=`)
//line greeter.qtpl:7
		qw422016.N().Q(g.background)
//line greeter.qtpl:7
		qw422016.N().S(`
`)
//line greeter.qtpl:8
	}
//line greeter.qtpl:8
	qw422016.N().S(`,

;loginform-offset-x=50%
;loginform-offset-y=50%
loginform-show-input-chain={{ }}
ccs-contest-api-url={{.apiUrl  }}
ccs-autologin-username={{.username}}
;{{ contest_users.0.name }}
ccs-autologin-password=test
;{{ password_plain }}
ccs-start-minimum-msec=500
`)
//line greeter.qtpl:19
}

//line greeter.qtpl:19
func (g greeterOptions) WriteGenerate(qq422016 qtio422016.Writer) {
//line greeter.qtpl:19
	qw422016 := qt422016.AcquireWriter(qq422016)
//line greeter.qtpl:19
	g.StreamGenerate(qw422016)
//line greeter.qtpl:19
	qt422016.ReleaseWriter(qw422016)
//line greeter.qtpl:19
}

//line greeter.qtpl:19
func (g greeterOptions) Generate() string {
//line greeter.qtpl:19
	qb422016 := qt422016.AcquireByteBuffer()
//line greeter.qtpl:19
	g.WriteGenerate(qb422016)
//line greeter.qtpl:19
	qs422016 := string(qb422016.B)
//line greeter.qtpl:19
	qt422016.ReleaseByteBuffer(qb422016)
//line greeter.qtpl:19
	return qs422016
//line greeter.qtpl:19
}
