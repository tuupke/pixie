// Code generated by the FlatBuffers compiler. DO NOT EDIT.

package packets

import (
	"strconv"

	flatbuffers "github.com/google/flatbuffers/go"
)

type Cmd byte

const (
	CmdNONE Cmd = 0
)

var EnumNamesCmd = map[Cmd]string{
	CmdNONE: "NONE",
}

var EnumValuesCmd = map[string]Cmd{
	"NONE": CmdNONE,
}

func (v Cmd) String() string {
	if s, ok := EnumNamesCmd[v]; ok {
		return s
	}
	return "Cmd(" + strconv.FormatInt(int64(v), 10) + ")"
}

type CmdT struct {
	Type Cmd
	Value interface{}
}

func (t *CmdT) Pack(builder *flatbuffers.Builder) flatbuffers.UOffsetT {
	if t == nil {
		return 0
	}
	switch t.Type {
	}
	return 0
}

func (rcv Cmd) UnPack(table flatbuffers.Table) *CmdT {
	switch rcv {
	}
	return nil
}
