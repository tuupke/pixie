namespace packets;

// Client requests, to be queued
table Ping {
    /// hostname is the client's detected hostname
    hostname:   string;
    /// identifier is the guid generated by pixie
    identifier: string;
}

table Welcome {
    banner: Ping;

    has_team: bool;
    team_id: string;
    team_name: string;
}

table IP {
    ip: string;
    netmask: int;
    name: string;
    mac: string;
}

table Register {
    banner: Ping;
    ips:    [IP];
}

root_type Register;
// // Server responses
// table Ok {}
//
// // Server requests, requested
// table Assign {}
// table Shell { command: string; }
// table ShowWindow {}
// table HideWindor {}
// enum PowerType: byte { unknown = 0, logout, shutdown, reboot}
// table Power {
//     /// type is what this powerrequest requests of the server. Defaults to reboot
//     type: PowerType = reboot;
//     /// in depicts the time.Duration to wait before reboot. Defaults to 5s
//     in: uint64 = 5000000000;
// }
//
// /// Force a greeter layout
// // table Greeter {}
//
// // union Cmd { Register, Greeter, Reboot, Logout, Shutdown, Ansible, Notify }
// // union Cmd {Greeter}
//
// union Resp { Register }
//
// table Command {
//     command: Cmd;
//
//     time:      uint64;
// }
//
// table Response {
//     response: Resp;
//
//     time: uint64;
// }
//
// table Setting {
//     key: string;
//     value: string;
// }
//
// table Settings {
//     settings: [Setting];
// }